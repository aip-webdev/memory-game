name: Deploy to remote server
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "$SSH_HOSTS" >> ~/.ssh/known_hosts
        env:
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Create certs
        run: |
          chmod 777 nginx/.ssl
          echo "NGINX_CHAIN" > ./nginx/.ssl/certificate_full_chain.pem
          echo "NGINX_KEY" > ./nginx/.ssl/private_key.pem
        env:
          NGINX_CHAIN: ${{ secrets.CERT_FULL_CHAIN }}
          NGINX_KEY: ${{ secrets.CERT_PRIVATE_KEY }}
      - name: Remove old files from server
        run: |
          ssh mg-admin@158.160.23.245 "pushd /home/mg-admin && sudo docker rm $(sudo docker ps -a -f status=exited -q) && sudo docker rmi $(sudo docker images -f 'dangling=true' -q) && if [ ! -d memory-game ]; then mkdir memory-game && sudo chmod 777 memory-game && cd memory-game; else cd memory-game && sudo docker-compose down && sudo find . ! \( -path './db/db-data' \) -delete && exit; fi"
      - name: Copy files to server
        run: |
          scp -r ./* mg-admin@158.160.23.245:~/memory-game
          scp -r ./.env.sample mg-admin@158.160.23.245:~/memory-game
      - name: Restart the application
        run: |
          ssh mg-admin@158.160.23.245 "pushd /home/mg-admin/memory-game && cp .env.sample .env && sudo docker-compose down && sudo docker-compose build && sudo docker-compose up -d && find . ! \( -path './db' \) ! \( -name 'docker-compose.yml' \) -delete && ls -a && exit"
