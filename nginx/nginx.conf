worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    sendfile on;

    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_valid any      1m;
    proxy_cache_valid 200 302 10m;
    proxy_cache_methods GET HEAD POST;

    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Access-Control-Allow-Origin "https://memory-game.store";
    add_header Access-Control-Allow-Headers *;

    upstream docker-server {
        server server:9000;
    }

    server {
        listen 80;
        ssi on;
        # указать нужные домены на случай замены
        server_name memory-game.store;

        if ($host = www.memory-game.store) { return 301 https://$server_name$request_uri; }

        location / { return 301 https://$server_name$request_uri; }
    }

    server {
        listen [::]:443 ssl http2 backlog=2048 ipv6only=off;
        # указать нужные домены на случай замены
        server_name memory-game.store;
        # сертификаты
        ssi on;
        add_header Strict-Transport-Security "max-age=31536000;";

        ssl_certificate /etc/nginx/ssl/certificate_full_chain.pem;
        ssl_certificate_key /etc/nginx/ssl/private_key.pem;
        ssl_ciphers HIGH:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!EXP:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        if ($host = www.memory-game.store) { return 301 https://memory-game.store$request_uri; }

        location /assets {
            include publicLocation;
        }

        location /icons {
            include publicLocation;
        }

        location / {
            include location;
        }
    }
}